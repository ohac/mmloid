#!/usr/bin/ruby
# encoding: utf-8
require 'fileutils'
$oto = "oto"
$tool = "wavtool2.exe"
$resamp = "resampler.exe"
$output = "temp.wav"
$flag = ""
$stp = "0"
$tempwav = "temp___.wav"

B64TBL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

def decode(str)
  i = 0
  last = 0
  decoded = []
  loop do
    s1 = str[i]
    case s1
    when nil
      break
    when '#'
      i += 1
      v = str[i..-1].to_i
      decoded += [last] * v
      i = str.index('#', i) + 1
    else
      i += 1
      s2 = str[i]
      i += 1
      ans = B64TBL.index(s1) << 6 | B64TBL.index(s2)
      ans -= 4096 if ans >= 2048
      last = ans
      decoded << ans
    end
  end
  decoded
end

def encode(ary)
  last = nil
  runlen = 0
  encoded = ary.map do |v|
    v += 4096 if v < 0
    if v == last
      runlen += 1
      ''
    else
      last = v
      v1 = v >> 6
      v2 = v & 0x3f
      b = B64TBL[v1] + B64TBL[v2]
      if runlen > 0
        b = "##{runlen}#" + b
        runlen = 0
      end
      b
    end
  end
  if runlen > 0
    encoded << "##{runlen}#"
  end
  encoded.join
end

def helper(vel, symbol, pitchp, len, offset, lenreq, fixlen, endblank, vol,
    mod, pitchb1, pitchb2, env)
  tempin = "tempin"
  inwav = "#{tempin}.wav"
  inwavfrq = "#{tempin}_wav.frq"
  FileUtils.ln("#{$oto}/#{symbol}.wav", inwav)
  FileUtils.ln("#{$oto}/#{symbol}_wav.frq", inwavfrq)
  pitchb2 = encode(pitchb2)
  `wine #{$resamp} #{inwav} #{$tempwav} #{pitchp} #{vel} "#{$flag}" #{offset} #{lenreq} #{fixlen} #{endblank} #{vol} #{mod} #{pitchb1} #{pitchb2}`
  `wine #{$tool} #{$output} #{$tempwav} #{$stp} #{len} #{env.join(' ')}`
  FileUtils.rm_f(inwav)
  FileUtils.rm_f(inwavfrq)
end

def rest(len)
  `wine #{$tool} #{$output} #{$oto}/R.wav 0 #{len} 0 0`
end

FileUtils.rm_f($output)

pb = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -2, -3, -3, -4, -5, -5, -4, -4, -3, -1, 1, 3, 5, 8, 10, 13, 15, 16, 17, 18, 17, 16, 13, 10, 6, 3, 0, -3, -5, -7, -9, -9, -10, -9, -9, -8, -6, -5, -4, -2, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 7, 10, 14, 19, 24, 29, 35],
[-200, -200, -200, -200, -200, -200, -200, -200, -200, -200, -200, -199, -198, -196, -193, -190, -186, -182, -177, -171, -165, -159, -152, -144, -137, -129, -121, -113, -105, -96, -88, -80, -72, -64, -57, -49, -42, -36, -30, -24, -19, -14, -10, -7, -4, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 2, 0, -1, -3, -6, -8, -11, -13, -15, -17, -18, -18, -18, -15, -11, -8, -5, -2, 1, 3, 5, 7, 7, 7, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0],
[-200, -200, -200, -200, -200, -200, -200, -200, -200, -200, -200, -199, -197, -195, -192, -189, -185, -180, -175, -169, -163, -156, -149, -142, -134, -126, -118, -110, -102, -93, -85, -77, -69, -61, -54, -47, -40, -33, -27, -22, -17, -13, -9, -6, -3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 5, 6, 7, 7, 7, 7, 7, 6, 4, 2, -1, -3, -6, -9, -12, -15, -17, -19, -20, -19, -17, -14, -12, -9, -6, -3, 0, 2, 4, 6, 7, 7, 7, 7, 6, 5, 4, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0],
[-100, -100, -100, -100, -100, -100, -100, -100, -99, -98, -96, -94, -92, -89, -86, -83, -79, -75, -71, -67, -63, -58, -54, -49, -45, -40, -36, -31, -27, -23, -20, -16, -13, -10, -7, -5, -3, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 4, 4, 4, 3, 2, 1, -1, -3, -6, -8, -11, -13, -15, -16, -17, -17, -17, -16, -12, -9, -5, -2, 1, 4, 6, 8, 9, 9, 9, 9, 8, 7, 6, 3, 1, -1, -4, -7, -9, -12, -15, -19, -22, -26, -30, -35, -39, -44, -48, -53, -57, -62, -66, -70, -74, -78, -82, -85, -88, -91],
[88, 85, 82, 78, 74, 70, 66, 62, 57, 53, 48, 44, 39, 35, 30, 26, 22, 19, 15, 12, 9, 7, 5, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -2, -3, -4, -6, -7, -8, -9, -9, -9, -8, -7, -5, -3, 0, 3, 7, 10, 14, 16, 16, 17, 16, 15, 13, 11, 9, 6, 2, -2, -6, -11, -16, -21, -27, -31, -38, -43],
[151, 144, 137, 129, 121, 113, 104, 96, 88, 80, 72, 64, 56, 49, 42, 35, 29, 24, 19, 14, 10, 7, 4, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -2, -3, -4, -4, -5, -4, -4, -3, -1, 0, 2, 5, 7, 9, 12, 14, 15, 16, 17, 17, 16, 14, 11, 7, 4, 0, -3, -5, -8, -9, -10, -11, -11, -10, -9, -8, -8, -7, -8, -9, -12, -15, -19, -23, -29, -36, -43, -50, -57, -64, -72, -80],
[162, 155, 148, 141, 133, 125, 117, 109, 100, 92, 84, 76, 68, 60, 53, 46, 39, 33, 27, 21, 16, 12, 9, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -2, -3, -3, -4, -4, -4, -3, -2, -1, 1, 3, 5, 7, 9, 11, 13, 15, 16, 16, 16, 15, 13, 11, 7, 3, 0, -3, -6, -9, -10, -11, -12, -12, -11, -10, -9, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -4, -2, -2, -1, 0, 1, 2, 4, 6, 7, 9, 11, 12, 13, 13, 13, 12, 10, 8, 5, 2, -1, -5, -8, -11, -13, -15, -16, -16, -15, -14, -12, -10, -8, -6, -4, -2, 0, 2, 3, 4, 4, 4, 4, 3, 3, 2],
[-100, -100, -100, -100, -100, -100, -99, -99, -97, -96, -94, -91, -89, -85, -82, -79, -75, -71, -66, -62, -58, -53, -48, -44, -39, -35, -31, -27, -23, -19, -16, -12, -10, -7, -5, -3, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, -2, -3, -4, -5, -6, -7, -7, -7, -7, -6, -4, -3, 0, 2, 5, 8, 11, 14, 16, 18, 20, 19, 18, 15, 13, 10, 7, 4, 1, -1, -3, -5, -6, -7, -7, -7, -7, -6, -5, -4, -2, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 8, 11, 15, 20, 25, 31],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 5, 6, 5, 5, 4, 2, 0, -2, -5, -8, -11, -14, -16, -18, -20, -19, -17, -15, -12, -9, -6, -3, -1, 2, 3, 5, 6, 6, 6, 6, 5, 4, 3, 2],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, -1, -2, -3, -4, -6, -7, -9, -10, -11, -11, -11, -10, -9, -7, -5, -2, 1, 5, 8, 12, 14, 16, 16, 16, 16, 15, 13, 11, 9, 6, 4, 2, -1, -4, -7, -11, -14, -18, -23, -27, -31, -38, -43],
[151, 144, 137, 129, 121, 113, 104, 96, 88, 80, 72, 64, 56, 49, 42, 35, 29, 24, 19, 14, 10, 7, 4, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 7, 5, 3, 1, -2, -5, -8, -11, -14, -17, -19, -19, -19, -17, -15, -13, -10, -7, -4, -2, 1, 3, 4, 6, 6, 7, 5, 4, 1, -3, -8, -13, -18, -23, -30, -36, -43, -50, -57, -64, -72],
[169, 163, 156, 149, 142, 134, 126, 118, 110, 102, 93, 85, 77, 69, 61, 54, 47, 40, 33, 28, 22, 17, 13, 9, 6, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -2, -3, -4, -5, -6, -6, -5, -5, -3, -1, 1, 3, 6, 9, 11, 14, 16, 18, 19, 19, 17, 15, 12, 9, 6, 3, 0, -2, -4, -6, -7, -7, -7, -7, -6, -5, -4, -3, -2, -2, -2, -4, -5, -8, -10, -13, -16, -20, -24],
[97, 96, 94, 91, 88, 85, 82, 78, 74, 70, 66, 62, 57, 53, 48, 44, 39, 35, 31, 26, 23, 19, 15, 12, 9, 7, 5, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 6, 5, 4, 2, -1, -4, -6, -9, -12, -14, -17, -18, -19, -19, -18, -15, -12, -9, -6, -3, 0, 3, 5, 7, 8, 9, 9, 9, 8, 7, 6, 5, 4, 3, 1, 1, 0, 0, 0, 0],
]

en = [
[0, 5, 0, 0, 100, 100, 100, -10, 100],
[100, 0, 35, 100, 100, 100, 0, 100],
[0, 5, 35, 0, 100, 100, 0, 26],
[0, 5, 0, 0, 100, 100, 100, 23, 100],
[100, 0, 35, 100, 100, 100, 0, 100],
[0, 5, 35, 0, 100, 100, 0, -10],
[0, 5, 35, 0, 100, 100, 0, 28],
[0, 5, 35, 0, 100, 100, 0, -10],
[0, 5, 0, 0, 100, 100, 100, -15, 100],
[100, 0, 35, 100, 100, 100, 0, 100],
[0, 5, 35, 0, 100, 100, 0, -10],
[0, 5, 35, 0, 100, 100, 0, -10],
[0, 5, 35, 0, 100, 100, 0, 26],
[0, 5, 35, 0, 100, 100, 0, 39],
]

helper(100, "か", "C4", "480@120+69.0", 27.0, 600, 81.0, 46.0, 100, 0,
"!120.00", pb[0], en[0])

helper(100, "え", "D4", "480@120+28.0", 30.0, 600, 59.0, 48.0, 96, 0,
"!120.00", pb[1], en[1])

helper(100, "る", "E4", "480@120+42.0", 23.0, 600, 104.0, 56.0, 100, 0,
"!120.00", pb[2], en[2])

helper(100, "の", "F4", "480@120+79.0", 19.0, 650, 77.0, 65.0, 100, 0,
"!120.00", pb[3], en[3])

helper(100, "う", "E4", "480@120+6.0", 23.0, 550, 52.0, 37.0, 96, 0,
"!120.00", pb[4], en[4])

helper(100, "た", "D4", "480@120+20.0", 29.0, 550, 67.0, 91.0, 100, 0,
"!120.00", pb[5], en[5])

helper(100, "が", "C4", "480@120+42.0", 24.0, 600, 96.0, 47.0, 100, 0,
"!120.00", pb[6], en[6])

rest("480@120-62.0")

helper(100, "き", "E4", "480@120+14.0", 15.0, 550, 108.0, 41.0, 100, 0,
"!120.00", pb[7], en[7])

helper(100, "こ", "F4", "480@120+73.0", 22.0, 600, 86.0, 98.0, 100, 0,
"!120.00", pb[8], en[8])

helper(100, "え", "G4", "480@120+16.0", 30.0, 550, 59.0, 48.0, 96, 0,
"!120.00", pb[9], en[9])

helper(100, "て", "A4", "480@120+28.0", 22.0, 550, 62.0, 65.0, 100, 0,
"!120.00", pb[10], en[10])

helper(100, "く", "G4", "480@120+12.0", 26.0, 550, 87.0, 53.0, 100, 0,
"!120.00", pb[11], en[11])

helper(100, "る", "F4", "480@120+16.0", 23.0, 550, 104.0, 56.0, 100, 0,
"!120.00", pb[12], en[12])

helper(100, "よ", "E4", "480@120+71.0", 5.0, 600, 282.0, 31.0, 100, 0,
"!120.00", pb[13], en[13])

FileUtils.rm_f($tempwav)

File.open($output, 'wb') do |fd|
  ['whd', 'dat'].each do |fnb|
    fn = "#{$output}.#{fnb}"
    File.open(fn, 'rb') do |rfd|
      fd.write(rfd.read)
    end
    FileUtils.rm_f(fn)
  end
end
